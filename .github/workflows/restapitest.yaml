## GITHUB ACTIONS USAGE
# DEPLOY JOBS DEPENDS ON BRANCHES


name: Deploy to production
on:
  push:
    branches:
    - main
    - staging
  workflow_dispatch:

env:
    CLUSTER_NAME: ${{ github.ref_name }}
    REGION: eu-central-1
    APITEST_IMAGE: ghcr.io/Eyup-Devop/restapitest/restapitest-${{ github.ref_name }}
    DEPLOYMENT_MANIFEST_PATH: "${{ github.workspace }}/.${{ github.ref_name }}"
    REGISTRY: ghcr.io

jobs:
    build-restapitest:
        runs-on: ubuntu-latest
        permissions:
          contents: read
          packages: write

        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: tagging image and metadata
            uses: docker/metadata-action@v5
            id: metadata
            with:
              images: ${{ env.APITEST_IMAGE }}
              tags: |
                ${{ github.sha }}
                latest

          - name: login GHCR
            uses: docker/login-action@v3
            with:
              registry: ${{ env.REGISTRY }}
              username: ${{ github.actor }}
              password: ${{ secrets.PERSONEL_TOKEN }}

          - name: build and push image to repository
            uses: int128/kaniko-action@v1
            with:
              context: .
              push: true
              tags: ${{ steps.metadata.outputs.tags }}
              labels: ${{ steps.metadata.outputs.labels }}
              # cache: true
              # cache-repository: ${{ env.APITEST_IMAGE }}/cache
              target: "apitest"
    deploy-restapitest:
        needs: build-restapitest
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
                aws-region: ${{env.REGION}}

            - name: connect to EKS cluster
              run: aws eks update-kubeconfig --name $CLUSTER_NAME --region $REGION

            - name: deploy respapitest manifest yaml files
              run: |
                cd ${{ github.workspace }}/.${{ github.ref_name }}
                kustomize edit set image ${APITEST_IMAGE}=:${{ github.sha }}
                kubectl apply -k .


